import { Locale } from "../locale";
export declare class pl implements Locale {
    atX0SecondsPastTheMinuteGt20(): string;
    atX0MinutesPastTheHourGt20(): string;
    commaMonthX0ThroughMonthX1(): string;
    monthX0ThroughMonthX1(): string;
    commaYearX0ThroughYearX1(): string;
    yearX0ThroughYearX1(): string;
    use24HourTimeFormatByDefault(): boolean;
    anErrorOccuredWhenGeneratingTheExpressionD(): string;
    at(): string;
    atSpace(): string;
    atX0(): string;
    atX0MinutesPastTheHour(): string;
    atX0SecondsPastTheMinute(): string;
    betweenX0AndX1(): string;
    commaBetweenDayX0AndX1OfTheMonth(): string;
    betweenDayX0AndX1OfTheMonth(): string;
    commaEveryDay(): string;
    everyDay(): string;
    commaEveryX0Days(): string;
    everyX0Days(): string;
    commaEveryX0DaysOfTheWeek(): string;
    everyX0DaysOfTheWeek(): string;
    commaEveryX0Months(): string;
    everyX0Months(): string;
    commaEveryMonth(): string;
    everyMonth(): string;
    commaEveryX0Years(): string;
    everyX0Years(): string;
    commaOnDayX0OfTheMonth(): string;
    onDayX0OfTheMonth(): string;
    commaOnDayX0(): string;
    onDayX0(): string;
    commaOnDayX0OfEveryMonth(): string;
    onDayX0OfEveryMonth(): string;
    commaOnDayX0OfEveryX0Months(): string;
    onDayX0OfEveryX0Months(): string;
    commaOnlyInX0(): string;
    onlyInX0(): string;
    commaOnlyOnX0(): string;
    commaAndOnX0(): string;
    commaOnThe(): string;
    onThe(): string;
    commaOnTheLastDayOfTheMonth(): string;
    lastDayOfTheMonth(): string;
    commaOnTheLastWeekdayOfTheMonth(): string;
    lastWeekdayOfTheMonth(): string;
    commaDaysBeforeTheLastDayOfTheMonth(): string;
    daysBeforeTheLastDayOfTheMonth(): string;
    commaOnTheLastX0OfTheMonth(): string;
    commaOnTheX0OfTheMonth(): string;
    theX0OfTheMonth(): string;
    commaX0ThroughX1(): string;
    x0ThroughX1(): string;
    everyHour(): string;
    everyMinute(): string;
    everyMinuteBetweenX0AndX1(): string;
    everySecond(): string;
    everyX0Hours(): string;
    everyX0Minutes(): string;
    everyX0Seconds(): string;
    fifth(): string;
    first(): string;
    firstWeekday(): string;
    fourth(): string;
    minutesX0ThroughX1PastTheHour(): string;
    second(): string;
    secondsX0ThroughX1PastTheMinute(): string;
    spaceAnd(): string;
    spaceX0OfTheMonth(): string;
    lastDay(): string;
    third(): string;
    weekdayNearestDayX0(): string;
    commaStartingX0(): string;
    daysOfTheWeek(): string[];
    monthsOfTheYear(): string[];
}
